// source: deployment/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var domain_domain_pb = require('../domain/domain_pb.js');
goog.object.extend(proto, domain_domain_pb);
goog.exportSymbol('proto.deployment.BeaconEvent', null, global);
goog.exportSymbol('proto.deployment.BeaconEvent.EventCase', null, global);
goog.exportSymbol('proto.deployment.BeaconEvent.LevelDrop', null, global);
goog.exportSymbol('proto.deployment.BeaconEventStreamRequest', null, global);
goog.exportSymbol('proto.deployment.BeaconLocationUpdate', null, global);
goog.exportSymbol('proto.deployment.BeaconLocationUpdateStreamRequest', null, global);
goog.exportSymbol('proto.deployment.BeaconTimelineUpdateStreamReply', null, global);
goog.exportSymbol('proto.deployment.BeaconTimelineUpdateStreamRequest', null, global);
goog.exportSymbol('proto.deployment.GetBeaconLocationHistoryReply', null, global);
goog.exportSymbol('proto.deployment.GetBeaconLocationHistoryRequest', null, global);
goog.exportSymbol('proto.deployment.GetNearbyBeaconsReply', null, global);
goog.exportSymbol('proto.deployment.GetNearbyBeaconsRequest', null, global);
goog.exportSymbol('proto.deployment.GetNearbyBeaconsRequest.FilterCase', null, global);
goog.exportSymbol('proto.deployment.GetZoneHistoryReply', null, global);
goog.exportSymbol('proto.deployment.GetZoneHistoryReply.BeaconStats', null, global);
goog.exportSymbol('proto.deployment.GetZoneHistoryRequest', null, global);
goog.exportSymbol('proto.deployment.GetZonesReply', null, global);
goog.exportSymbol('proto.deployment.GetZonesRequest', null, global);
goog.exportSymbol('proto.deployment.LocationHistory', null, global);
goog.exportSymbol('proto.deployment.LocationHistory.ZoneStats', null, global);
goog.exportSymbol('proto.deployment.LocationRecord', null, global);
goog.exportSymbol('proto.deployment.SaveImageReply', null, global);
goog.exportSymbol('proto.deployment.SaveImageRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconLocationUpdateStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.BeaconLocationUpdateStreamRequest.repeatedFields_, null);
};
goog.inherits(proto.deployment.BeaconLocationUpdateStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconLocationUpdateStreamRequest.displayName = 'proto.deployment.BeaconLocationUpdateStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.LocationRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.LocationRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.LocationRecord.displayName = 'proto.deployment.LocationRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.LocationHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.LocationHistory.repeatedFields_, null);
};
goog.inherits(proto.deployment.LocationHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.LocationHistory.displayName = 'proto.deployment.LocationHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.LocationHistory.ZoneStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.LocationHistory.ZoneStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.LocationHistory.ZoneStats.displayName = 'proto.deployment.LocationHistory.ZoneStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconLocationUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.BeaconLocationUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconLocationUpdate.displayName = 'proto.deployment.BeaconLocationUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetBeaconLocationHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.GetBeaconLocationHistoryRequest.repeatedFields_, null);
};
goog.inherits(proto.deployment.GetBeaconLocationHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetBeaconLocationHistoryRequest.displayName = 'proto.deployment.GetBeaconLocationHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetBeaconLocationHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.GetBeaconLocationHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetBeaconLocationHistoryReply.displayName = 'proto.deployment.GetBeaconLocationHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetNearbyBeaconsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_);
};
goog.inherits(proto.deployment.GetNearbyBeaconsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetNearbyBeaconsRequest.displayName = 'proto.deployment.GetNearbyBeaconsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetNearbyBeaconsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.GetNearbyBeaconsReply.repeatedFields_, null);
};
goog.inherits(proto.deployment.GetNearbyBeaconsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetNearbyBeaconsReply.displayName = 'proto.deployment.GetNearbyBeaconsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconEventStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.BeaconEventStreamRequest.repeatedFields_, null);
};
goog.inherits(proto.deployment.BeaconEventStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconEventStreamRequest.displayName = 'proto.deployment.BeaconEventStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.deployment.BeaconEvent.oneofGroups_);
};
goog.inherits(proto.deployment.BeaconEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconEvent.displayName = 'proto.deployment.BeaconEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconEvent.LevelDrop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.BeaconEvent.LevelDrop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconEvent.LevelDrop.displayName = 'proto.deployment.BeaconEvent.LevelDrop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconTimelineUpdateStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.BeaconTimelineUpdateStreamRequest.repeatedFields_, null);
};
goog.inherits(proto.deployment.BeaconTimelineUpdateStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconTimelineUpdateStreamRequest.displayName = 'proto.deployment.BeaconTimelineUpdateStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.BeaconTimelineUpdateStreamReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.BeaconTimelineUpdateStreamReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.BeaconTimelineUpdateStreamReply.displayName = 'proto.deployment.BeaconTimelineUpdateStreamReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetZonesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.GetZonesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetZonesRequest.displayName = 'proto.deployment.GetZonesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetZonesReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deployment.GetZonesReply.repeatedFields_, null);
};
goog.inherits(proto.deployment.GetZonesReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetZonesReply.displayName = 'proto.deployment.GetZonesReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetZoneHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.GetZoneHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetZoneHistoryRequest.displayName = 'proto.deployment.GetZoneHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetZoneHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.GetZoneHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetZoneHistoryReply.displayName = 'proto.deployment.GetZoneHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.GetZoneHistoryReply.BeaconStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.GetZoneHistoryReply.BeaconStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.GetZoneHistoryReply.BeaconStats.displayName = 'proto.deployment.GetZoneHistoryReply.BeaconStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.SaveImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.SaveImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.SaveImageRequest.displayName = 'proto.deployment.SaveImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deployment.SaveImageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deployment.SaveImageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deployment.SaveImageReply.displayName = 'proto.deployment.SaveImageReply';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.BeaconLocationUpdateStreamRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconLocationUpdateStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconLocationUpdateStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconLocationUpdateStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    beaconFilterList: jspb.Message.toObjectList(msg.getBeaconFilterList(),
    domain_domain_pb.Beacon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconLocationUpdateStreamRequest}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconLocationUpdateStreamRequest;
  return proto.deployment.BeaconLocationUpdateStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconLocationUpdateStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconLocationUpdateStreamRequest}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconLocationUpdateStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconLocationUpdateStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconLocationUpdateStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeaconFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Beacon beacon_filter = 1;
 * @return {!Array<!proto.domain.Beacon>}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.getBeaconFilterList = function() {
  return /** @type{!Array<!proto.domain.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Beacon, 1));
};


/**
 * @param {!Array<!proto.domain.Beacon>} value
 * @return {!proto.deployment.BeaconLocationUpdateStreamRequest} returns this
*/
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.setBeaconFilterList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Beacon}
 */
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.addBeaconFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.BeaconLocationUpdateStreamRequest} returns this
 */
proto.deployment.BeaconLocationUpdateStreamRequest.prototype.clearBeaconFilterList = function() {
  return this.setBeaconFilterList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.LocationRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.LocationRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.LocationRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromTime: (f = msg.getFromTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toTime: (f = msg.getToTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.LocationRecord}
 */
proto.deployment.LocationRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.LocationRecord;
  return proto.deployment.LocationRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.LocationRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.LocationRecord}
 */
proto.deployment.LocationRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.LocationRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.LocationRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.LocationRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.deployment.LocationRecord.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.LocationRecord} returns this
 */
proto.deployment.LocationRecord.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.LocationRecord.prototype.getFromTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.LocationRecord} returns this
*/
proto.deployment.LocationRecord.prototype.setFromTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.LocationRecord} returns this
 */
proto.deployment.LocationRecord.prototype.clearFromTime = function() {
  return this.setFromTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.LocationRecord.prototype.hasFromTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.LocationRecord.prototype.getToTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.LocationRecord} returns this
*/
proto.deployment.LocationRecord.prototype.setToTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.LocationRecord} returns this
 */
proto.deployment.LocationRecord.prototype.clearToTime = function() {
  return this.setToTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.LocationRecord.prototype.hasToTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.LocationHistory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.LocationHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.LocationHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.LocationHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    zoneStatsMap: (f = msg.getZoneStatsMap()) ? f.toObject(includeInstance, proto.deployment.LocationHistory.ZoneStats.toObject) : [],
    locationRecordsList: jspb.Message.toObjectList(msg.getLocationRecordsList(),
    proto.deployment.LocationRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.LocationHistory}
 */
proto.deployment.LocationHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.LocationHistory;
  return proto.deployment.LocationHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.LocationHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.LocationHistory}
 */
proto.deployment.LocationHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getZoneStatsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.deployment.LocationHistory.ZoneStats.deserializeBinaryFromReader, "", new proto.deployment.LocationHistory.ZoneStats());
         });
      break;
    case 2:
      var value = new proto.deployment.LocationRecord;
      reader.readMessage(value,proto.deployment.LocationRecord.deserializeBinaryFromReader);
      msg.addLocationRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.LocationHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.LocationHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.LocationHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZoneStatsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.deployment.LocationHistory.ZoneStats.serializeBinaryToWriter);
  }
  f = message.getLocationRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.deployment.LocationRecord.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.LocationHistory.ZoneStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.LocationHistory.ZoneStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationHistory.ZoneStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    percentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.LocationHistory.ZoneStats}
 */
proto.deployment.LocationHistory.ZoneStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.LocationHistory.ZoneStats;
  return proto.deployment.LocationHistory.ZoneStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.LocationHistory.ZoneStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.LocationHistory.ZoneStats}
 */
proto.deployment.LocationHistory.ZoneStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentage(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.LocationHistory.ZoneStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.LocationHistory.ZoneStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.LocationHistory.ZoneStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.LocationHistory.ZoneStats} returns this
 */
proto.deployment.LocationHistory.ZoneStats.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float percentage = 2;
 * @return {number}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.deployment.LocationHistory.ZoneStats} returns this
 */
proto.deployment.LocationHistory.ZoneStats.prototype.setPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional google.protobuf.Duration duration = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.deployment.LocationHistory.ZoneStats} returns this
*/
proto.deployment.LocationHistory.ZoneStats.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.LocationHistory.ZoneStats} returns this
 */
proto.deployment.LocationHistory.ZoneStats.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.LocationHistory.ZoneStats.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, ZoneStats> zone_stats = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.deployment.LocationHistory.ZoneStats>}
 */
proto.deployment.LocationHistory.prototype.getZoneStatsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.deployment.LocationHistory.ZoneStats>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.deployment.LocationHistory.ZoneStats));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.deployment.LocationHistory} returns this
 */
proto.deployment.LocationHistory.prototype.clearZoneStatsMap = function() {
  this.getZoneStatsMap().clear();
  return this;};


/**
 * repeated LocationRecord location_records = 2;
 * @return {!Array<!proto.deployment.LocationRecord>}
 */
proto.deployment.LocationHistory.prototype.getLocationRecordsList = function() {
  return /** @type{!Array<!proto.deployment.LocationRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.deployment.LocationRecord, 2));
};


/**
 * @param {!Array<!proto.deployment.LocationRecord>} value
 * @return {!proto.deployment.LocationHistory} returns this
*/
proto.deployment.LocationHistory.prototype.setLocationRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.deployment.LocationRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.deployment.LocationRecord}
 */
proto.deployment.LocationHistory.prototype.addLocationRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.deployment.LocationRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.LocationHistory} returns this
 */
proto.deployment.LocationHistory.prototype.clearLocationRecordsList = function() {
  return this.setLocationRecordsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconLocationUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconLocationUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconLocationUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconLocationUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beacon: (f = msg.getBeacon()) && domain_domain_pb.Beacon.toObject(includeInstance, f),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconLocationUpdate}
 */
proto.deployment.BeaconLocationUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconLocationUpdate;
  return proto.deployment.BeaconLocationUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconLocationUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconLocationUpdate}
 */
proto.deployment.BeaconLocationUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.setBeacon(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconLocationUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconLocationUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconLocationUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconLocationUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeacon();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.deployment.BeaconLocationUpdate.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.BeaconLocationUpdate} returns this
 */
proto.deployment.BeaconLocationUpdate.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional domain.Beacon beacon = 2;
 * @return {?proto.domain.Beacon}
 */
proto.deployment.BeaconLocationUpdate.prototype.getBeacon = function() {
  return /** @type{?proto.domain.Beacon} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Beacon, 2));
};


/**
 * @param {?proto.domain.Beacon|undefined} value
 * @return {!proto.deployment.BeaconLocationUpdate} returns this
*/
proto.deployment.BeaconLocationUpdate.prototype.setBeacon = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconLocationUpdate} returns this
 */
proto.deployment.BeaconLocationUpdate.prototype.clearBeacon = function() {
  return this.setBeacon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconLocationUpdate.prototype.hasBeacon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.BeaconLocationUpdate.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.BeaconLocationUpdate} returns this
*/
proto.deployment.BeaconLocationUpdate.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconLocationUpdate} returns this
 */
proto.deployment.BeaconLocationUpdate.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconLocationUpdate.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.GetBeaconLocationHistoryRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetBeaconLocationHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetBeaconLocationHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetBeaconLocationHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromTime: (f = msg.getFromTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toTime: (f = msg.getToTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    beaconFilterList: jspb.Message.toObjectList(msg.getBeaconFilterList(),
    domain_domain_pb.Beacon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest}
 */
proto.deployment.GetBeaconLocationHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetBeaconLocationHistoryRequest;
  return proto.deployment.GetBeaconLocationHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetBeaconLocationHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest}
 */
proto.deployment.GetBeaconLocationHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToTime(value);
      break;
    case 3:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetBeaconLocationHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetBeaconLocationHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetBeaconLocationHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBeaconFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp from_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.getFromTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
*/
proto.deployment.GetBeaconLocationHistoryRequest.prototype.setFromTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.clearFromTime = function() {
  return this.setFromTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.hasFromTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp to_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.getToTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
*/
proto.deployment.GetBeaconLocationHistoryRequest.prototype.setToTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.clearToTime = function() {
  return this.setToTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.hasToTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated domain.Beacon beacon_filter = 3;
 * @return {!Array<!proto.domain.Beacon>}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.getBeaconFilterList = function() {
  return /** @type{!Array<!proto.domain.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Beacon, 3));
};


/**
 * @param {!Array<!proto.domain.Beacon>} value
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
*/
proto.deployment.GetBeaconLocationHistoryRequest.prototype.setBeaconFilterList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.domain.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Beacon}
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.addBeaconFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.domain.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.GetBeaconLocationHistoryRequest} returns this
 */
proto.deployment.GetBeaconLocationHistoryRequest.prototype.clearBeaconFilterList = function() {
  return this.setBeaconFilterList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetBeaconLocationHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetBeaconLocationHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetBeaconLocationHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetBeaconLocationHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationhistoryMap: (f = msg.getLocationhistoryMap()) ? f.toObject(includeInstance, proto.deployment.LocationHistory.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetBeaconLocationHistoryReply}
 */
proto.deployment.GetBeaconLocationHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetBeaconLocationHistoryReply;
  return proto.deployment.GetBeaconLocationHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetBeaconLocationHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetBeaconLocationHistoryReply}
 */
proto.deployment.GetBeaconLocationHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLocationhistoryMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.deployment.LocationHistory.deserializeBinaryFromReader, 0, new proto.deployment.LocationHistory());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetBeaconLocationHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetBeaconLocationHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetBeaconLocationHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetBeaconLocationHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationhistoryMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.deployment.LocationHistory.serializeBinaryToWriter);
  }
};


/**
 * map<int32, LocationHistory> locationHistory = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.deployment.LocationHistory>}
 */
proto.deployment.GetBeaconLocationHistoryReply.prototype.getLocationhistoryMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.deployment.LocationHistory>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.deployment.LocationHistory));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.deployment.GetBeaconLocationHistoryReply} returns this
 */
proto.deployment.GetBeaconLocationHistoryReply.prototype.clearLocationhistoryMap = function() {
  this.getLocationhistoryMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.deployment.GetNearbyBeaconsRequest.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.deployment.GetNearbyBeaconsRequest.FilterCase = {
  FILTER_NOT_SET: 0,
  AIR_DISTANCE: 2,
  WALKING_DISTANCE: 3,
  WALKING_TIME: 4
};

/**
 * @return {proto.deployment.GetNearbyBeaconsRequest.FilterCase}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getFilterCase = function() {
  return /** @type {proto.deployment.GetNearbyBeaconsRequest.FilterCase} */(jspb.Message.computeOneofCase(this, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetNearbyBeaconsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetNearbyBeaconsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetNearbyBeaconsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    beacon: (f = msg.getBeacon()) && domain_domain_pb.Beacon.toObject(includeInstance, f),
    airDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    walkingDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    walkingTime: (f = msg.getWalkingTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetNearbyBeaconsRequest}
 */
proto.deployment.GetNearbyBeaconsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetNearbyBeaconsRequest;
  return proto.deployment.GetNearbyBeaconsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetNearbyBeaconsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetNearbyBeaconsRequest}
 */
proto.deployment.GetNearbyBeaconsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.setBeacon(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAirDistance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWalkingDistance(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setWalkingTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetNearbyBeaconsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetNearbyBeaconsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetNearbyBeaconsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeacon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getWalkingTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional domain.Beacon beacon = 1;
 * @return {?proto.domain.Beacon}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getBeacon = function() {
  return /** @type{?proto.domain.Beacon} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Beacon, 1));
};


/**
 * @param {?proto.domain.Beacon|undefined} value
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
*/
proto.deployment.GetNearbyBeaconsRequest.prototype.setBeacon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.clearBeacon = function() {
  return this.setBeacon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.hasBeacon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double air_distance = 2;
 * @return {number}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getAirDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.setAirDistance = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.clearAirDistance = function() {
  return jspb.Message.setOneofField(this, 2, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.hasAirDistance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double walking_distance = 3;
 * @return {number}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getWalkingDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.setWalkingDistance = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.clearWalkingDistance = function() {
  return jspb.Message.setOneofField(this, 3, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.hasWalkingDistance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration walking_time = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getWalkingTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
*/
proto.deployment.GetNearbyBeaconsRequest.prototype.setWalkingTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.deployment.GetNearbyBeaconsRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.clearWalkingTime = function() {
  return this.setWalkingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.hasWalkingTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.deployment.GetNearbyBeaconsRequest} returns this
 */
proto.deployment.GetNearbyBeaconsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.GetNearbyBeaconsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetNearbyBeaconsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetNearbyBeaconsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetNearbyBeaconsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetNearbyBeaconsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    beaconList: jspb.Message.toObjectList(msg.getBeaconList(),
    domain_domain_pb.Beacon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetNearbyBeaconsReply}
 */
proto.deployment.GetNearbyBeaconsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetNearbyBeaconsReply;
  return proto.deployment.GetNearbyBeaconsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetNearbyBeaconsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetNearbyBeaconsReply}
 */
proto.deployment.GetNearbyBeaconsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeacon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetNearbyBeaconsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetNearbyBeaconsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetNearbyBeaconsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetNearbyBeaconsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeaconList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Beacon beacon = 1;
 * @return {!Array<!proto.domain.Beacon>}
 */
proto.deployment.GetNearbyBeaconsReply.prototype.getBeaconList = function() {
  return /** @type{!Array<!proto.domain.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Beacon, 1));
};


/**
 * @param {!Array<!proto.domain.Beacon>} value
 * @return {!proto.deployment.GetNearbyBeaconsReply} returns this
*/
proto.deployment.GetNearbyBeaconsReply.prototype.setBeaconList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Beacon}
 */
proto.deployment.GetNearbyBeaconsReply.prototype.addBeacon = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.GetNearbyBeaconsReply} returns this
 */
proto.deployment.GetNearbyBeaconsReply.prototype.clearBeaconList = function() {
  return this.setBeaconList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.BeaconEventStreamRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconEventStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconEventStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconEventStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEventStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    beaconFilterList: jspb.Message.toObjectList(msg.getBeaconFilterList(),
    domain_domain_pb.Beacon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconEventStreamRequest}
 */
proto.deployment.BeaconEventStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconEventStreamRequest;
  return proto.deployment.BeaconEventStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconEventStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconEventStreamRequest}
 */
proto.deployment.BeaconEventStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconEventStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconEventStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconEventStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEventStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeaconFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Beacon beacon_filter = 1;
 * @return {!Array<!proto.domain.Beacon>}
 */
proto.deployment.BeaconEventStreamRequest.prototype.getBeaconFilterList = function() {
  return /** @type{!Array<!proto.domain.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Beacon, 1));
};


/**
 * @param {!Array<!proto.domain.Beacon>} value
 * @return {!proto.deployment.BeaconEventStreamRequest} returns this
*/
proto.deployment.BeaconEventStreamRequest.prototype.setBeaconFilterList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Beacon}
 */
proto.deployment.BeaconEventStreamRequest.prototype.addBeaconFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.BeaconEventStreamRequest} returns this
 */
proto.deployment.BeaconEventStreamRequest.prototype.clearBeaconFilterList = function() {
  return this.setBeaconFilterList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.deployment.BeaconEvent.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.deployment.BeaconEvent.EventCase = {
  EVENT_NOT_SET: 0,
  LEVEL_DROP: 3
};

/**
 * @return {proto.deployment.BeaconEvent.EventCase}
 */
proto.deployment.BeaconEvent.prototype.getEventCase = function() {
  return /** @type {proto.deployment.BeaconEvent.EventCase} */(jspb.Message.computeOneofCase(this, proto.deployment.BeaconEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    beacon: (f = msg.getBeacon()) && domain_domain_pb.Beacon.toObject(includeInstance, f),
    levelDrop: (f = msg.getLevelDrop()) && proto.deployment.BeaconEvent.LevelDrop.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconEvent}
 */
proto.deployment.BeaconEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconEvent;
  return proto.deployment.BeaconEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconEvent}
 */
proto.deployment.BeaconEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.setBeacon(value);
      break;
    case 3:
      var value = new proto.deployment.BeaconEvent.LevelDrop;
      reader.readMessage(value,proto.deployment.BeaconEvent.LevelDrop.deserializeBinaryFromReader);
      msg.setLevelDrop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBeacon();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getLevelDrop();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.deployment.BeaconEvent.LevelDrop.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconEvent.LevelDrop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconEvent.LevelDrop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEvent.LevelDrop.toObject = function(includeInstance, msg) {
  var f, obj = {
    previousZone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconEvent.LevelDrop}
 */
proto.deployment.BeaconEvent.LevelDrop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconEvent.LevelDrop;
  return proto.deployment.BeaconEvent.LevelDrop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconEvent.LevelDrop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconEvent.LevelDrop}
 */
proto.deployment.BeaconEvent.LevelDrop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousZone(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconEvent.LevelDrop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconEvent.LevelDrop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconEvent.LevelDrop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreviousZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string previous_zone = 1;
 * @return {string}
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.getPreviousZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.BeaconEvent.LevelDrop} returns this
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.setPreviousZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zone = 2;
 * @return {string}
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.BeaconEvent.LevelDrop} returns this
 */
proto.deployment.BeaconEvent.LevelDrop.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.BeaconEvent.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.BeaconEvent} returns this
*/
proto.deployment.BeaconEvent.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconEvent} returns this
 */
proto.deployment.BeaconEvent.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional domain.Beacon beacon = 2;
 * @return {?proto.domain.Beacon}
 */
proto.deployment.BeaconEvent.prototype.getBeacon = function() {
  return /** @type{?proto.domain.Beacon} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Beacon, 2));
};


/**
 * @param {?proto.domain.Beacon|undefined} value
 * @return {!proto.deployment.BeaconEvent} returns this
*/
proto.deployment.BeaconEvent.prototype.setBeacon = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconEvent} returns this
 */
proto.deployment.BeaconEvent.prototype.clearBeacon = function() {
  return this.setBeacon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconEvent.prototype.hasBeacon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LevelDrop level_drop = 3;
 * @return {?proto.deployment.BeaconEvent.LevelDrop}
 */
proto.deployment.BeaconEvent.prototype.getLevelDrop = function() {
  return /** @type{?proto.deployment.BeaconEvent.LevelDrop} */ (
    jspb.Message.getWrapperField(this, proto.deployment.BeaconEvent.LevelDrop, 3));
};


/**
 * @param {?proto.deployment.BeaconEvent.LevelDrop|undefined} value
 * @return {!proto.deployment.BeaconEvent} returns this
*/
proto.deployment.BeaconEvent.prototype.setLevelDrop = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.deployment.BeaconEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconEvent} returns this
 */
proto.deployment.BeaconEvent.prototype.clearLevelDrop = function() {
  return this.setLevelDrop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconEvent.prototype.hasLevelDrop = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconTimelineUpdateStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconTimelineUpdateStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    beaconFilterList: jspb.Message.toObjectList(msg.getBeaconFilterList(),
    domain_domain_pb.Beacon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamRequest}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconTimelineUpdateStreamRequest;
  return proto.deployment.BeaconTimelineUpdateStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconTimelineUpdateStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamRequest}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconTimelineUpdateStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconTimelineUpdateStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeaconFilterList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Beacon beacon_filter = 1;
 * @return {!Array<!proto.domain.Beacon>}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.getBeaconFilterList = function() {
  return /** @type{!Array<!proto.domain.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Beacon, 1));
};


/**
 * @param {!Array<!proto.domain.Beacon>} value
 * @return {!proto.deployment.BeaconTimelineUpdateStreamRequest} returns this
*/
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.setBeaconFilterList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Beacon}
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.addBeaconFilter = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamRequest} returns this
 */
proto.deployment.BeaconTimelineUpdateStreamRequest.prototype.clearBeaconFilterList = function() {
  return this.setBeaconFilterList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.BeaconTimelineUpdateStreamReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.BeaconTimelineUpdateStreamReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconTimelineUpdateStreamReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    beaconTimelineMap: (f = msg.getBeaconTimelineMap()) ? f.toObject(includeInstance, proto.domain.BeaconTimeline.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamReply}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.BeaconTimelineUpdateStreamReply;
  return proto.deployment.BeaconTimelineUpdateStreamReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.BeaconTimelineUpdateStreamReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamReply}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = msg.getBeaconTimelineMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.domain.BeaconTimeline.deserializeBinaryFromReader, 0, new proto.domain.BeaconTimeline());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.BeaconTimelineUpdateStreamReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.BeaconTimelineUpdateStreamReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.BeaconTimelineUpdateStreamReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBeaconTimelineMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.domain.BeaconTimeline.serializeBinaryToWriter);
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.BeaconTimelineUpdateStreamReply} returns this
*/
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamReply} returns this
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<int32, domain.BeaconTimeline> beacon_timeline = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.domain.BeaconTimeline>}
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.getBeaconTimelineMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.domain.BeaconTimeline>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.domain.BeaconTimeline));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.deployment.BeaconTimelineUpdateStreamReply} returns this
 */
proto.deployment.BeaconTimelineUpdateStreamReply.prototype.clearBeaconTimelineMap = function() {
  this.getBeaconTimelineMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetZonesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetZonesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetZonesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZonesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetZonesRequest}
 */
proto.deployment.GetZonesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetZonesRequest;
  return proto.deployment.GetZonesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetZonesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetZonesRequest}
 */
proto.deployment.GetZonesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetZonesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetZonesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetZonesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZonesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deployment.GetZonesReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetZonesReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetZonesReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetZonesReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZonesReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    zonesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetZonesReply}
 */
proto.deployment.GetZonesReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetZonesReply;
  return proto.deployment.GetZonesReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetZonesReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetZonesReply}
 */
proto.deployment.GetZonesReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addZones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetZonesReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetZonesReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetZonesReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZonesReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string zones = 1;
 * @return {!Array<string>}
 */
proto.deployment.GetZonesReply.prototype.getZonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.deployment.GetZonesReply} returns this
 */
proto.deployment.GetZonesReply.prototype.setZonesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.deployment.GetZonesReply} returns this
 */
proto.deployment.GetZonesReply.prototype.addZones = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deployment.GetZonesReply} returns this
 */
proto.deployment.GetZonesReply.prototype.clearZonesList = function() {
  return this.setZonesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetZoneHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetZoneHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetZoneHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromTime: (f = msg.getFromTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toTime: (f = msg.getToTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetZoneHistoryRequest}
 */
proto.deployment.GetZoneHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetZoneHistoryRequest;
  return proto.deployment.GetZoneHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetZoneHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetZoneHistoryRequest}
 */
proto.deployment.GetZoneHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetZoneHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetZoneHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetZoneHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.deployment.GetZoneHistoryRequest.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.GetZoneHistoryRequest} returns this
 */
proto.deployment.GetZoneHistoryRequest.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.GetZoneHistoryRequest.prototype.getFromTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.GetZoneHistoryRequest} returns this
*/
proto.deployment.GetZoneHistoryRequest.prototype.setFromTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetZoneHistoryRequest} returns this
 */
proto.deployment.GetZoneHistoryRequest.prototype.clearFromTime = function() {
  return this.setFromTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetZoneHistoryRequest.prototype.hasFromTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.deployment.GetZoneHistoryRequest.prototype.getToTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.deployment.GetZoneHistoryRequest} returns this
*/
proto.deployment.GetZoneHistoryRequest.prototype.setToTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetZoneHistoryRequest} returns this
 */
proto.deployment.GetZoneHistoryRequest.prototype.clearToTime = function() {
  return this.setToTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetZoneHistoryRequest.prototype.hasToTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetZoneHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetZoneHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetZoneHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    beaconstatsMap: (f = msg.getBeaconstatsMap()) ? f.toObject(includeInstance, proto.deployment.GetZoneHistoryReply.BeaconStats.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetZoneHistoryReply}
 */
proto.deployment.GetZoneHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetZoneHistoryReply;
  return proto.deployment.GetZoneHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetZoneHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetZoneHistoryReply}
 */
proto.deployment.GetZoneHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = msg.getBeaconstatsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.deployment.GetZoneHistoryReply.BeaconStats.deserializeBinaryFromReader, 0, new proto.deployment.GetZoneHistoryReply.BeaconStats());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetZoneHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetZoneHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetZoneHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeaconstatsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.deployment.GetZoneHistoryReply.BeaconStats.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.GetZoneHistoryReply.BeaconStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.GetZoneHistoryReply.BeaconStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    percentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.GetZoneHistoryReply.BeaconStats;
  return proto.deployment.GetZoneHistoryReply.BeaconStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.GetZoneHistoryReply.BeaconStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentage(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.GetZoneHistoryReply.BeaconStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.GetZoneHistoryReply.BeaconStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats} returns this
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float percentage = 2;
 * @return {number}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats} returns this
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.setPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional google.protobuf.Duration duration = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats} returns this
*/
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deployment.GetZoneHistoryReply.BeaconStats} returns this
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deployment.GetZoneHistoryReply.BeaconStats.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<int32, BeaconStats> beaconStats = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.deployment.GetZoneHistoryReply.BeaconStats>}
 */
proto.deployment.GetZoneHistoryReply.prototype.getBeaconstatsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.deployment.GetZoneHistoryReply.BeaconStats>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.deployment.GetZoneHistoryReply.BeaconStats));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.deployment.GetZoneHistoryReply} returns this
 */
proto.deployment.GetZoneHistoryReply.prototype.clearBeaconstatsMap = function() {
  this.getBeaconstatsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.SaveImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.SaveImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.SaveImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.SaveImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: msg.getImage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.SaveImageRequest}
 */
proto.deployment.SaveImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.SaveImageRequest;
  return proto.deployment.SaveImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.SaveImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.SaveImageRequest}
 */
proto.deployment.SaveImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.SaveImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.SaveImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.SaveImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.SaveImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string image_type = 1;
 * @return {string}
 */
proto.deployment.SaveImageRequest.prototype.getImageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.SaveImageRequest} returns this
 */
proto.deployment.SaveImageRequest.prototype.setImageType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes image = 2;
 * @return {!(string|Uint8Array)}
 */
proto.deployment.SaveImageRequest.prototype.getImage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes image = 2;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.deployment.SaveImageRequest.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.deployment.SaveImageRequest.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.deployment.SaveImageRequest} returns this
 */
proto.deployment.SaveImageRequest.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deployment.SaveImageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.deployment.SaveImageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deployment.SaveImageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.SaveImageReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deployment.SaveImageReply}
 */
proto.deployment.SaveImageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deployment.SaveImageReply;
  return proto.deployment.SaveImageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deployment.SaveImageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deployment.SaveImageReply}
 */
proto.deployment.SaveImageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deployment.SaveImageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deployment.SaveImageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deployment.SaveImageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deployment.SaveImageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.deployment.SaveImageReply.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deployment.SaveImageReply} returns this
 */
proto.deployment.SaveImageReply.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.deployment);
