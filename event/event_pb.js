// source: event/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var domain_domain_pb = require('../domain/domain_pb.js');
goog.object.extend(proto, domain_domain_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.event.BeaconObservationEvent', null, global);
goog.exportSymbol('proto.event.BeaconObservationsEvent', null, global);
goog.exportSymbol('proto.event.DeploymentCreatedEvent', null, global);
goog.exportSymbol('proto.event.DeploymentDeletedEvent', null, global);
goog.exportSymbol('proto.event.DeploymentUpdatedEvent', null, global);
goog.exportSymbol('proto.event.DeviceDiscovery', null, global);
goog.exportSymbol('proto.event.SubjectLocationUpdateEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.BeaconObservationsEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event.BeaconObservationsEvent.repeatedFields_, null);
};
goog.inherits(proto.event.BeaconObservationsEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.BeaconObservationsEvent.displayName = 'proto.event.BeaconObservationsEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.BeaconObservationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.BeaconObservationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.BeaconObservationEvent.displayName = 'proto.event.BeaconObservationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.SubjectLocationUpdateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.SubjectLocationUpdateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.SubjectLocationUpdateEvent.displayName = 'proto.event.SubjectLocationUpdateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.DeploymentCreatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.DeploymentCreatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.DeploymentCreatedEvent.displayName = 'proto.event.DeploymentCreatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.DeploymentDeletedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.DeploymentDeletedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.DeploymentDeletedEvent.displayName = 'proto.event.DeploymentDeletedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.DeploymentUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.DeploymentUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.DeploymentUpdatedEvent.displayName = 'proto.event.DeploymentUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event.DeviceDiscovery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event.DeviceDiscovery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event.DeviceDiscovery.displayName = 'proto.event.DeviceDiscovery';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event.BeaconObservationsEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.BeaconObservationsEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.BeaconObservationsEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.BeaconObservationsEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.BeaconObservationsEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    beacon: (f = msg.getBeacon()) && domain_domain_pb.Beacon.toObject(includeInstance, f),
    observationsList: jspb.Message.toObjectList(msg.getObservationsList(),
    domain_domain_pb.Observation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.BeaconObservationsEvent}
 */
proto.event.BeaconObservationsEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.BeaconObservationsEvent;
  return proto.event.BeaconObservationsEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.BeaconObservationsEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.BeaconObservationsEvent}
 */
proto.event.BeaconObservationsEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = new domain_domain_pb.Beacon;
      reader.readMessage(value,domain_domain_pb.Beacon.deserializeBinaryFromReader);
      msg.setBeacon(value);
      break;
    case 3:
      var value = new domain_domain_pb.Observation;
      reader.readMessage(value,domain_domain_pb.Observation.deserializeBinaryFromReader);
      msg.addObservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.BeaconObservationsEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.BeaconObservationsEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.BeaconObservationsEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.BeaconObservationsEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBeacon();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getObservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      domain_domain_pb.Observation.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deployment_id = 1;
 * @return {number}
 */
proto.event.BeaconObservationsEvent.prototype.getDeploymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.BeaconObservationsEvent} returns this
 */
proto.event.BeaconObservationsEvent.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional domain.Beacon beacon = 2;
 * @return {?proto.domain.Beacon}
 */
proto.event.BeaconObservationsEvent.prototype.getBeacon = function() {
  return /** @type{?proto.domain.Beacon} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Beacon, 2));
};


/**
 * @param {?proto.domain.Beacon|undefined} value
 * @return {!proto.event.BeaconObservationsEvent} returns this
*/
proto.event.BeaconObservationsEvent.prototype.setBeacon = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.BeaconObservationsEvent} returns this
 */
proto.event.BeaconObservationsEvent.prototype.clearBeacon = function() {
  return this.setBeacon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.BeaconObservationsEvent.prototype.hasBeacon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated domain.Observation observations = 3;
 * @return {!Array<!proto.domain.Observation>}
 */
proto.event.BeaconObservationsEvent.prototype.getObservationsList = function() {
  return /** @type{!Array<!proto.domain.Observation>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_domain_pb.Observation, 3));
};


/**
 * @param {!Array<!proto.domain.Observation>} value
 * @return {!proto.event.BeaconObservationsEvent} returns this
*/
proto.event.BeaconObservationsEvent.prototype.setObservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.domain.Observation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Observation}
 */
proto.event.BeaconObservationsEvent.prototype.addObservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.domain.Observation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event.BeaconObservationsEvent} returns this
 */
proto.event.BeaconObservationsEvent.prototype.clearObservationsList = function() {
  return this.setObservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.BeaconObservationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.BeaconObservationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.BeaconObservationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.BeaconObservationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    observation: (f = msg.getObservation()) && domain_domain_pb.Observation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.BeaconObservationEvent}
 */
proto.event.BeaconObservationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.BeaconObservationEvent;
  return proto.event.BeaconObservationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.BeaconObservationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.BeaconObservationEvent}
 */
proto.event.BeaconObservationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Observation;
      reader.readMessage(value,domain_domain_pb.Observation.deserializeBinaryFromReader);
      msg.setObservation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.BeaconObservationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.BeaconObservationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.BeaconObservationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.BeaconObservationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_domain_pb.Observation.serializeBinaryToWriter
    );
  }
};


/**
 * optional domain.Observation observation = 1;
 * @return {?proto.domain.Observation}
 */
proto.event.BeaconObservationEvent.prototype.getObservation = function() {
  return /** @type{?proto.domain.Observation} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Observation, 1));
};


/**
 * @param {?proto.domain.Observation|undefined} value
 * @return {!proto.event.BeaconObservationEvent} returns this
*/
proto.event.BeaconObservationEvent.prototype.setObservation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.BeaconObservationEvent} returns this
 */
proto.event.BeaconObservationEvent.prototype.clearObservation = function() {
  return this.setObservation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.BeaconObservationEvent.prototype.hasObservation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.SubjectLocationUpdateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.SubjectLocationUpdateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.SubjectLocationUpdateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.SubjectLocationUpdateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: (f = msg.getSubject()) && domain_domain_pb.Subject.toObject(includeInstance, f),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    locationId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.SubjectLocationUpdateEvent}
 */
proto.event.SubjectLocationUpdateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.SubjectLocationUpdateEvent;
  return proto.event.SubjectLocationUpdateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.SubjectLocationUpdateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.SubjectLocationUpdateEvent}
 */
proto.event.SubjectLocationUpdateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_domain_pb.Subject;
      reader.readMessage(value,domain_domain_pb.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLocationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.SubjectLocationUpdateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.SubjectLocationUpdateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.SubjectLocationUpdateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.SubjectLocationUpdateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_domain_pb.Subject.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocationId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional domain.Subject subject = 1;
 * @return {?proto.domain.Subject}
 */
proto.event.SubjectLocationUpdateEvent.prototype.getSubject = function() {
  return /** @type{?proto.domain.Subject} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.Subject, 1));
};


/**
 * @param {?proto.domain.Subject|undefined} value
 * @return {!proto.event.SubjectLocationUpdateEvent} returns this
*/
proto.event.SubjectLocationUpdateEvent.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.SubjectLocationUpdateEvent} returns this
 */
proto.event.SubjectLocationUpdateEvent.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.SubjectLocationUpdateEvent.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event.SubjectLocationUpdateEvent.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event.SubjectLocationUpdateEvent} returns this
*/
proto.event.SubjectLocationUpdateEvent.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.SubjectLocationUpdateEvent} returns this
 */
proto.event.SubjectLocationUpdateEvent.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.SubjectLocationUpdateEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 location_id = 3;
 * @return {number}
 */
proto.event.SubjectLocationUpdateEvent.prototype.getLocationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.SubjectLocationUpdateEvent} returns this
 */
proto.event.SubjectLocationUpdateEvent.prototype.setLocationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.DeploymentCreatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.DeploymentCreatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.DeploymentCreatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentCreatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    model: (f = msg.getModel()) && domain_domain_pb.DeploymentDto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.DeploymentCreatedEvent}
 */
proto.event.DeploymentCreatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.DeploymentCreatedEvent;
  return proto.event.DeploymentCreatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.DeploymentCreatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.DeploymentCreatedEvent}
 */
proto.event.DeploymentCreatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = new domain_domain_pb.DeploymentDto;
      reader.readMessage(value,domain_domain_pb.DeploymentDto.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.DeploymentCreatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.DeploymentCreatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.DeploymentCreatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentCreatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.DeploymentDto.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deployment_id = 1;
 * @return {number}
 */
proto.event.DeploymentCreatedEvent.prototype.getDeploymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.DeploymentCreatedEvent} returns this
 */
proto.event.DeploymentCreatedEvent.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional domain.DeploymentDto model = 2;
 * @return {?proto.domain.DeploymentDto}
 */
proto.event.DeploymentCreatedEvent.prototype.getModel = function() {
  return /** @type{?proto.domain.DeploymentDto} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.DeploymentDto, 2));
};


/**
 * @param {?proto.domain.DeploymentDto|undefined} value
 * @return {!proto.event.DeploymentCreatedEvent} returns this
*/
proto.event.DeploymentCreatedEvent.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.DeploymentCreatedEvent} returns this
 */
proto.event.DeploymentCreatedEvent.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.DeploymentCreatedEvent.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.DeploymentDeletedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.DeploymentDeletedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.DeploymentDeletedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentDeletedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.DeploymentDeletedEvent}
 */
proto.event.DeploymentDeletedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.DeploymentDeletedEvent;
  return proto.event.DeploymentDeletedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.DeploymentDeletedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.DeploymentDeletedEvent}
 */
proto.event.DeploymentDeletedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.DeploymentDeletedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.DeploymentDeletedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.DeploymentDeletedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentDeletedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 deployment_id = 1;
 * @return {number}
 */
proto.event.DeploymentDeletedEvent.prototype.getDeploymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.DeploymentDeletedEvent} returns this
 */
proto.event.DeploymentDeletedEvent.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.DeploymentUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.event.DeploymentUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.DeploymentUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    model: (f = msg.getModel()) && domain_domain_pb.DeploymentDto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.DeploymentUpdatedEvent}
 */
proto.event.DeploymentUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.DeploymentUpdatedEvent;
  return proto.event.DeploymentUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.DeploymentUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.DeploymentUpdatedEvent}
 */
proto.event.DeploymentUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = new domain_domain_pb.DeploymentDto;
      reader.readMessage(value,domain_domain_pb.DeploymentDto.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.DeploymentUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.DeploymentUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.DeploymentUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeploymentUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.DeploymentDto.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deployment_id = 1;
 * @return {number}
 */
proto.event.DeploymentUpdatedEvent.prototype.getDeploymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.DeploymentUpdatedEvent} returns this
 */
proto.event.DeploymentUpdatedEvent.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional domain.DeploymentDto model = 2;
 * @return {?proto.domain.DeploymentDto}
 */
proto.event.DeploymentUpdatedEvent.prototype.getModel = function() {
  return /** @type{?proto.domain.DeploymentDto} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.DeploymentDto, 2));
};


/**
 * @param {?proto.domain.DeploymentDto|undefined} value
 * @return {!proto.event.DeploymentUpdatedEvent} returns this
*/
proto.event.DeploymentUpdatedEvent.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.DeploymentUpdatedEvent} returns this
 */
proto.event.DeploymentUpdatedEvent.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.DeploymentUpdatedEvent.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event.DeviceDiscovery.prototype.toObject = function(opt_includeInstance) {
  return proto.event.DeviceDiscovery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event.DeviceDiscovery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeviceDiscovery.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    model: (f = msg.getModel()) && domain_domain_pb.DeploymentDto.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event.DeviceDiscovery}
 */
proto.event.DeviceDiscovery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event.DeviceDiscovery;
  return proto.event.DeviceDiscovery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event.DeviceDiscovery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event.DeviceDiscovery}
 */
proto.event.DeviceDiscovery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = new domain_domain_pb.DeploymentDto;
      reader.readMessage(value,domain_domain_pb.DeploymentDto.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event.DeviceDiscovery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event.DeviceDiscovery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event.DeviceDiscovery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event.DeviceDiscovery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_domain_pb.DeploymentDto.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deployment_id = 1;
 * @return {number}
 */
proto.event.DeviceDiscovery.prototype.getDeploymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event.DeviceDiscovery} returns this
 */
proto.event.DeviceDiscovery.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional domain.DeploymentDto model = 2;
 * @return {?proto.domain.DeploymentDto}
 */
proto.event.DeviceDiscovery.prototype.getModel = function() {
  return /** @type{?proto.domain.DeploymentDto} */ (
    jspb.Message.getWrapperField(this, domain_domain_pb.DeploymentDto, 2));
};


/**
 * @param {?proto.domain.DeploymentDto|undefined} value
 * @return {!proto.event.DeviceDiscovery} returns this
*/
proto.event.DeviceDiscovery.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event.DeviceDiscovery} returns this
 */
proto.event.DeviceDiscovery.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event.DeviceDiscovery.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.event);
